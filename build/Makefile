CAMLC=ocamlc
OCAML=ocamlfind $(CAMLC) -linkpkg -thread -package core -package llvm -package llvm.analysis
OBJS=exceptions.cmo ast.cmo astprint.cmo scanner.cmo parser.cmo semant.cmo codegen.cmo
INCLUDE=-I ../src/include -g
TARGETS=$(COMPILER)
OCAML_FLAGS=$(INCLUDE) $(OBJS)
EXAMPLES=../examples
SYMLINK=ln -s -f
COMPILER=shuxc

.PHONY: default symlink
default: symlink shuxc

symlink:
	$(SYMLINK) ../src/frontend/exceptions.ml 	exceptions.ml
	$(SYMLINK) ../src/frontend/ast.mli 				ast.ml
	$(SYMLINK) ../src/backend/codegen.ml 			codegen.ml
	$(SYMLINK) ../src/frontend/parser.mly			parser.mly
	$(SYMLINK) ../src/frontend/scanner.mll   	scanner.mll
	$(SYMLINK) ../src/backend/semant.ml     	semant.ml
	$(SYMLINK) ../src/shuxc.ml 								shuxc.ml
	$(SYMLINK) ../src/frontend/astprint.ml		astprint.ml

scanner.ml: scanner.mll exceptions.ml
	ocamllex scanner.mll

parser.ml parser.mli: parser.mly ast.ml
	ocamlyacc parser.mly

shuxc: shuxc.ml $(OBJS)
	$(OCAML) $(OCAML_FLAGS) -o shuxc $<

%.cmo: %.ml
	$(OCAML) $(OCAML_FLAGS) -c $<
%.cmi: %.mli
	$(OCAML) $(OCAML_FLAGS) -c $<

#generated by ocamldep *.ml *.mli
ast.cmo :
ast.cmx :
astprint.cmo : ast.cmo
astprint.cmx : ast.cmx
codegen.cmo : ast.cmo
codegen.cmx : ast.cmx
exceptions.cmo :
exceptions.cmx :
parser.cmo : ast.cmo parser.cmi
parser.cmx : ast.cmx parser.cmi
scanner.cmo : parser.cmi exceptions.cmo
scanner.cmx : parser.cmx exceptions.cmx
semant.cmo : astprint.cmo ast.cmo
semant.cmx : astprint.cmx ast.cmx
shuxc.cmo : semant.cmo scanner.cmo parser.cmi codegen.cmo astprint.cmo
shuxc.cmx : semant.cmx scanner.cmx parser.cmx codegen.cmx astprint.cmx
parser.cmi : ast.cmo


.PHONY: all clean cleanall test

all: cleanall symlink $(OBJS) $(TARGETS)

cleanall:
	rm -rf *.* shuxc

clean:
	rm -rf *.cmx *.cmi *.cmo *.cmx *.o parser.ml parser.mli scanner.ml shuxc

hello: $(COMPILER) $(EXAMPLES)/hello_world.shux
	./shuxc $(EXAMPLES)/hello_world.shux
