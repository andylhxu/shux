CAMLC=ocamlc
OCAML=ocamlfind $(CAMLC) -linkpkg -thread -package core -package llvm -package llvm.analysis
OBJS=exceptions.cmo scanner.cmo parser.cmo semant.cmo codegen.cmo
INCLUDE=-I ../src/include -g
TARGETS=$(COMPILER)
OCAML_FLAGS=$(INCLUDE) $(OBJS)
COMPILER=shuxc
SYMLINK=ln -s -f


all: symlink $(OBJS) $(TARGETS)

%: %.ml $(OBJS) $(EXT_OBJS)
	$(OCAML) $(OCAML_FLAGS) -o $@ $(LIBS) $<

hello: $(COMPILER) $(EXAMPLES)/hello_world.shux
	./shuxc $(EXAMPLES)/hello_world.shux

shuxc:

scanner.ml: scanner.mll exceptions.cmo
	ocamllex scanner.mll

parser.ml parser.mli: parser.mly ast.mli
	ocamlyacc parser.mly

automata: parser.mly
	ocamlyacc -v parser.mly

%.cmo: %.ml
	$(OCAML) $(OCAML_FLAGS) -c $<
%.cmi: %.mli
	$(OCAML) $(OCAML_FLAGS) -c $<

.PHONY: clean test

symlink:
	$(SYMLINK) ../src/frontend/exceptions.ml 	exceptions.ml
	$(SYMLINK) ../src/frontend/ast.mli 				ast.mli
	$(SYMLINK) ../src/backend/codegen.ml 			codegen.ml
	$(SYMLINK) ../src/frontend/parser.mly			parser.mly
	$(SYMLINK) ../src/frontend/scanner.mll   	scanner.mll
	$(SYMLINK) ../src/backend/semant.ml     	semant.ml
	$(SYMLINK) ../src/shuxc.ml 								shuxc.ml

clean:
	rm -rf *.* shuxc

#generated by ocamldep *.ml *.mli
projparser.cmo: scanner.cmo parser.cmi ast.cmi
projparser.cmx: scanner.cmx parser.cmx ast.cmi
parser.cmo: ast.cmi parser.cmi
parser.cmx: ast.cmi parser.cmi
scanner.cmo: parser.cmi exceptions.cmi
scanner.cmx: parser.cmx exceptions.cmx
ast.cmi:
parser.cmi: ast.cmi
exceptions.cmo:
exceptions.cmx:
codegen.cmx:
semant.cmo:
semant.cmx:
shuxc.cmo:
shuxc.cmx:

